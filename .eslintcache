[{"C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\index.js":"1","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\reportWebVitals.js":"2","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\App.js":"3","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\search\\SearchBox.js":"4","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\shared\\Header.js":"5","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\savedMovies\\SavedMovies.js":"6","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\shared\\API.js":"7","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\movieList\\MovieList.js":"8","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\dialogMovie\\SavedMovieInfo.js":"9","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\dialogMovie\\ViewMovieInfo.js":"10","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\rating\\Rating.js":"11"},{"size":517,"mtime":1610396658531,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1610396658535,"results":"14","hashOfConfig":"13"},{"size":1581,"mtime":1610806566792,"results":"15","hashOfConfig":"13"},{"size":2446,"mtime":1610792701769,"results":"16","hashOfConfig":"13"},{"size":943,"mtime":1610794243700,"results":"17","hashOfConfig":"13"},{"size":3863,"mtime":1610808115618,"results":"18","hashOfConfig":"13"},{"size":442,"mtime":1610553954555,"results":"19","hashOfConfig":"13"},{"size":2863,"mtime":1610792545672,"results":"20","hashOfConfig":"13"},{"size":4918,"mtime":1610807222665,"results":"21","hashOfConfig":"13"},{"size":4642,"mtime":1610738749475,"results":"22","hashOfConfig":"13"},{"size":1140,"mtime":1610729954744,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10tb5x4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\index.js",[],["56","57"],"C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\reportWebVitals.js",[],"C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\App.js",["58"],"import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./shared/Header\";\r\nimport SearchBox from \"./search/SearchBox\";\r\nimport SavedMovies from \"./savedMovies/SavedMovies\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const movies = JSON.parse(window.localStorage.getItem(\"saved-movies\"));\r\n    if (movies && Array.isArray(movies)) {\r\n      this.state = {\r\n        movies,\r\n      };\r\n    } else {\r\n      this.state = {\r\n        movies: [],\r\n      };\r\n    }\r\n  }\r\n\r\n  handleAddMovie = (movie) => {\r\n    const movies = this.state.movies;\r\n    this.setState(\r\n      {\r\n        movies: [...movies, movie],\r\n      },\r\n      () => {\r\n        window.localStorage.setItem(\r\n          \"saved-movies\",\r\n          JSON.stringify(this.state.movies)\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  handleDeleteMovie = (movieId) => {\r\n    console.log(\"deleting \", movieId);\r\n    const index = this.state.movies.findIndex((movie) => movie.id === movieId);\r\n\r\n    this.setState(\r\n      {\r\n        movies: this.state.movies.filter((item) => item.id !== movieId),\r\n      },\r\n      () => {\r\n        window.localStorage.setItem(\r\n          \"saved-movies\",\r\n          JSON.stringify(this.state.movies)\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <SearchBox onMovieAdd={this.handleAddMovie} />\r\n        <SavedMovies\r\n          savedMovies={this.state.movies}\r\n          onMovieDelete={this.handleDeleteMovie}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\search\\SearchBox.js",["59","60","61","62","63","64"],"import React, { useState, useEffect } from \"react\";\r\nimport { Input, Button, TextField, Grid } from \"@material-ui/core\";\r\nimport { searchMovies } from \"../shared/API\";\r\nimport MovieList from \"../movieList/MovieList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    width: \"30%\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    marginTop: 80,\r\n    height: \"100%\",\r\n  },\r\n\r\n  searchBox: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n  },\r\n\r\n  input: {\r\n    width: \"100%\",\r\n    minWidth: 90,\r\n    border: \"2px solid #b8a9c9\",\r\n    borderRight: \"none\",\r\n    padding: 12,\r\n    height: 10,\r\n    borderRadius: \"5px 0 0 5px\",\r\n    outline: \"none\",\r\n  },\r\n\r\n  myBtn: {\r\n    width: 40,\r\n    height: 38,\r\n    borderRadius: \"0 5px 5px 0\",\r\n    cursor: \"pointer\",\r\n    border: \"2px solid #b8a9c9\",\r\n    color: \"white\",\r\n    backgroundColor: \"#b8a9c9\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hoverOpacity,\r\n      opacity: \"0.4\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const classes = useStyles();\r\n  const [term, setTerm] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const localMovieAdd = (movie) => {\r\n    setMovies([]);\r\n    props.onMovieAdd(movie);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setTerm(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.main}>\r\n        <div className={classes.searchBox}>\r\n          <input\r\n            variant=\"outlined\"\r\n            className={classes.input}\r\n            placeholder=\"Search for a movie\"\r\n            value={term}\r\n            style={{ borderRight: \"none\" }}\r\n            onChange={(e) => {\r\n              setTerm(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className={classes.myBtn}\r\n            onClick={() => {\r\n              searchMovies(term).then((res) => setMovies(res.data.results));\r\n              setTerm(\"\");\r\n            }}>\r\n            <SearchIcon />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"90px\" }}>\r\n        <MovieList\r\n          viewMovieInfo={props.viewMovieInfo}\r\n          movies={movies}\r\n          onMovieAdd={localMovieAdd}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\shared\\Header.js",["65"],"import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  title: {\r\n    textShadow: \"-1px 3px 12px rgba(0,0,0,0.59)\",\r\n    fontFamily: \"Sirin Stencil, cursive\",\r\n    fontSize: 25,\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\" style={{ backgroundColor: \"#b8a9c9\" }}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n            MovieðŸŽ¥List\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\savedMovies\\SavedMovies.js",["66","67"],"import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Typography,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\n\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SavedMovieInfo from \"../dialogMovie/SavedMovieInfo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    margin: 40,\r\n  },\r\n\r\n  gridList: {\r\n    width: 1400,\r\n  },\r\n\r\n  img: {\r\n    // marginTop: 70,\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    width: \"80%\",\r\n    height: \"auto\",\r\n  },\r\n\r\n  gridImg: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6\",\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n    color: \"gray\",\r\n  },\r\n}));\r\n\r\nconst SavedMovies = (props) => {\r\n  const classes = useStyles();\r\n  const [item, setItem] = useState(\"\");\r\n  const [selected, setSelected] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const childRef = useRef(null);\r\n\r\n  function handleClick(index, item) {\r\n    setSelected(index);\r\n    setItem(item);\r\n    setShow(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const getGridListCols = () => {\r\n    if (isWidthUp(\"lg\", props.width)) {\r\n      return 6;\r\n    }\r\n\r\n    if (isWidthUp(\"md\", props.width)) {\r\n      return 4;\r\n    }\r\n\r\n    if (isWidthUp(\"xs\", props.width)) {\r\n      return 2;\r\n    }\r\n\r\n    return 1;\r\n  };\r\n  return (\r\n    <div>\r\n      {props.savedMovies && props.savedMovies.length > 0 ? (\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Your movie list\r\n          </Typography>\r\n          <GridList\r\n            cellHeight={250}\r\n            cols={getGridListCols()}\r\n            spacing={40}\r\n            className={classes.gridList}>\r\n            {props.savedMovies.map((movie, index) => (\r\n              <GridListTile\r\n                className={classes.gridImg}\r\n                key={movie.id}\r\n                className={index === selected ? \"selected\" : \"\"}\r\n                key={`${index}`}>\r\n                {movie.poster_path === null ? (\r\n                  <img\r\n                    onClick={() => {\r\n                      handleClick(index, movie);\r\n                    }}\r\n                    src={`https://ceygate.com/content/themes/arkahost/assets/images/default-242x323.jpg`}\r\n                    alt={movie.title}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    className={classes.gridImg}\r\n                    onClick={() => {\r\n                      handleClick(index, movie);\r\n                    }}\r\n                    src={`https://image.tmdb.org/t/p/w154${movie.poster_path}`}\r\n                    alt={movie.title}\r\n                  />\r\n                )}\r\n                <GridListTileBar\r\n                  actionPosition={\"right\"}\r\n                  title={movie.title}\r\n                  subtitle={\r\n                    <span>({movie.release_date})</span>\r\n                  }></GridListTileBar>\r\n              </GridListTile>\r\n            ))}\r\n            <SavedMovieInfo\r\n              forwardedRef={childRef}\r\n              handleClose={handleClose}\r\n              show={show}\r\n              item={item}\r\n              onMovieDelete={props.onMovieDelete}\r\n            />\r\n          </GridList>\r\n        </div>\r\n      ) : (\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          <img\r\n            className={classes.img}\r\n            src=\"https://i.pinimg.com/originals/ae/8a/c2/ae8ac2fa217d23aadcc913989fcc34a2.png\"\r\n            alt=\"Empty list ðŸŽ¥\"\r\n          />\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(SavedMovies);\r\n","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\shared\\API.js",[],"C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\movieList\\MovieList.js",["68"],"import React, { useState, useRef } from \"react\";\r\nimport { GridList, GridListTile, GridListTileBar } from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ViewMovieInfo from \"../dialogMovie/ViewMovieInfo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    margin: 40,\r\n  },\r\n\r\n  gridList: {\r\n    width: 1400,\r\n  },\r\n\r\n  gridImg: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst MovieList = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const getGridListCols = () => {\r\n    if (isWidthUp(\"lg\", props.width)) {\r\n      return 6;\r\n    }\r\n\r\n    if (isWidthUp(\"md\", props.width)) {\r\n      return 4;\r\n    }\r\n\r\n    if (isWidthUp(\"xs\", props.width)) {\r\n      return 2;\r\n    }\r\n\r\n    return 2;\r\n  };\r\n\r\n  const [item, setItem] = useState(\"\");\r\n  const [selected, setSelected] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const childRef = useRef(null);\r\n\r\n  function handleClick(index, item) {\r\n    setSelected(index);\r\n    setItem(item);\r\n    setShow(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList\r\n        cellHeight={250}\r\n        cols={getGridListCols()}\r\n        spacing={40}\r\n        className={classes.gridList}>\r\n        {props.movies.map((movie, index) => (\r\n          <GridListTile\r\n            key={movie.id}\r\n            className={index === selected ? \"selected\" : \"\"}\r\n            key={`${index}`}>\r\n            {movie.poster_path === null ? (\r\n              <img\r\n                className={classes.gridImg}\r\n                onClick={() => {\r\n                  handleClick(index, movie);\r\n                }}\r\n                src={`https://ceygate.com/content/themes/arkahost/assets/images/default-242x323.jpg`}\r\n                alt={movie.title}\r\n              />\r\n            ) : (\r\n              <img\r\n                className={classes.gridImg}\r\n                onClick={() => {\r\n                  handleClick(index, movie);\r\n                }}\r\n                src={`https://image.tmdb.org/t/p/w154${movie.poster_path}`}\r\n                alt={movie.title}\r\n              />\r\n            )}\r\n\r\n            <GridListTileBar\r\n              actionPosition={\"right\"}\r\n              title={movie.title}\r\n              subtitle={<span>({movie.release_date})</span>}></GridListTileBar>\r\n          </GridListTile>\r\n        ))}\r\n        <ViewMovieInfo\r\n          forwardedRef={childRef}\r\n          handleClose={handleClose}\r\n          show={show}\r\n          item={item}\r\n          onMovieAdd={props.onMovieAdd}\r\n        />\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(MovieList);\r\n","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\dialogMovie\\SavedMovieInfo.js",["69"],"import React, { forwardRef } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport Rating from \"../rating/Rating\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Typography, Tooltip, Fab } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   flexGrow: 1,\r\n  // },\r\n\r\n  paper: {\r\n    paddingTop: 0,\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    marginRight: 0,\r\n    maxWidth: 800,\r\n  },\r\n\r\n  dialogTitle: {\r\n    padding: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  img: {\r\n    padding: 0,\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    width: 260,\r\n    height: 380,\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n\r\n  remove: {\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  fab: {\r\n    margin: theme.spacing(2),\r\n    background:\r\n      \"radial-gradient(circle, rgba(215,165,187,1) 0%, rgba(122,122,135,1) 100%);\",\r\n    pointerEvents: \"none\",\r\n  },\r\n}));\r\n\r\nconst SavedMovieInfo = (props) => {\r\n  const classes = useStyles();\r\n  const movie = props.item;\r\n\r\n  return (\r\n    <Dialog\r\n      ref={props.forwardRef}\r\n      open={props.show}\r\n      TransitionComponent={Transition}\r\n      key={movie.id}\r\n      keepMounted\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\">\r\n      <DialogTitle className={classes.dialogTitle}>\r\n        <Tooltip title=\"Close\">\r\n          <IconButton aria-label=\"close\" onClick={props.handleClose}>\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </DialogTitle>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            {movie.poster_path === null ? (\r\n              <img\r\n                src={`https://ceygate.com/content/themes/arkahost/assets/images/default-242x323.jpg`}\r\n                alt={movie.title}\r\n                className={classes.img}\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w154${movie.poster_path}`}\r\n                alt={movie.title}\r\n                className={classes.img}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  <b> {movie.title}</b>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}>\r\n                    <p>{movie.release_date}</p>\r\n                  </Fab>\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}>\r\n                    <p> {movie.vote_average}</p>\r\n                  </Fab>\r\n\r\n                  <Tooltip title=\"Delete movie\">\r\n                    <Fab\r\n                      className={classes.remove}\r\n                      size=\"small\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        props.onMovieDelete(movie.id);\r\n                      }}\r\n                      aria-label=\"like\">\r\n                      <DeleteIcon />\r\n                    </Fab>\r\n                  </Tooltip>\r\n                </Typography>\r\n                <Typography\r\n                  style={{ marginTop: \"0.34em\" }}\r\n                  variant=\"subtitle1\"\r\n                  gutterBottom>\r\n                  <b> Your rating:</b>\r\n                  <Rating movie={movie} key={movie.id} />\r\n                </Typography>\r\n                <Typography\r\n                  style={{ marginTop: \"0.34em\" }}\r\n                  variant=\"subtitle1\"\r\n                  gutterBottom>\r\n                  <b>Overview:</b>\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                  {movie.overview}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SavedMovieInfo;\r\n","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\dialogMovie\\ViewMovieInfo.js",["70"],"import React, { useRef } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Typography, Tooltip, Fab } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   flexGrow: 1,\r\n  // },\r\n  paper: {\r\n    paddingTop: 0,\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    marginRight: 0,\r\n    maxWidth: 800,\r\n  },\r\n\r\n  dialogTitle: {\r\n    padding: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  img: {\r\n    padding: 0,\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    width: 260,\r\n    height: 380,\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n\r\n  remove: {\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  fab: {\r\n    margin: theme.spacing(2),\r\n    background:\r\n      \"radial-gradient(circle, rgba(215,165,187,1) 0%, rgba(122,122,135,1) 100%);\",\r\n    pointerEvents: \"none\",\r\n  },\r\n\r\n  fav: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ViewMovieInfo = (props) => {\r\n  const classes = useStyles();\r\n  const movie = props.item;\r\n\r\n  return (\r\n    <Dialog\r\n      ref={props.forwardRef}\r\n      open={props.show}\r\n      TransitionComponent={Transition}\r\n      key={movie.id}\r\n      keepMounted\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\">\r\n      <DialogTitle className={classes.dialogTitle}>\r\n        <Tooltip title=\"Close\">\r\n          <IconButton aria-label=\"close\" onClick={props.handleClose}>\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </DialogTitle>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            {movie.poster_path === null ? (\r\n              <img\r\n                src={`https://ceygate.com/content/themes/arkahost/assets/images/default-242x323.jpg`}\r\n                alt={movie.title}\r\n                className={classes.img}\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w154${movie.poster_path}`}\r\n                alt={movie.title}\r\n                className={classes.img}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  <b> {movie.title}</b>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    className={classes.fab}\r\n                    size=\"small\"\r\n                    color=\"primary\">\r\n                    <span>{movie.release_date}</span>\r\n                  </Fab>\r\n\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    className={classes.fab}\r\n                    size=\"small\"\r\n                    color=\"primary\">\r\n                    <span>{movie.vote_average}</span>\r\n                  </Fab>\r\n                  <Tooltip title=\"Mark as favorite\">\r\n                    <Fab\r\n                      className={classes.fav}\r\n                      size=\"small\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        props.onMovieAdd(movie);\r\n                      }}\r\n                      aria-label=\"like\">\r\n                      <FavoriteIcon />\r\n                    </Fab>\r\n                  </Tooltip>\r\n                </Typography>\r\n                <Typography\r\n                  style={{ marginTop: \"0.34em\" }}\r\n                  variant=\"subtitle1\"\r\n                  gutterBottom>\r\n                  <b>Overview:</b>\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                  {movie.overview}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ViewMovieInfo;\r\n","C:\\Users\\Elena\\Documents\\GitHub\\movie-list-react\\src\\rating\\Rating.js",["71"],"import React, { useState, useEffect } from \"react\";\r\nimport StarIcon from \"@material-ui/icons/StarOutlined\";\r\nimport \"./Rating.css\";\r\n\r\nconst Rating = (props) => {\r\n  const [rating, setRating] = useState(\r\n    localStorage.getItem(props.movie.id) || \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(props.movie.id, rating);\r\n  }, [rating]);\r\n\r\n  const [hover, setHover] = useState(null);\r\n\r\n  return (\r\n    <div>\r\n      {[...Array(5)].map((star, i) => {\r\n        const ratingValue = i + 1;\r\n\r\n        return (\r\n          <label key={i}>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"rating\"\r\n              value={ratingValue}\r\n              onClick={() => setRating(ratingValue)}\r\n            />\r\n            <StarIcon\r\n              style={\r\n                ratingValue <= (hover || rating)\r\n                  ? { fill: \"#ffc107\" }\r\n                  : { fill: \"#c9c8c5\" }\r\n              }\r\n              onMouseEnter={() => setHover(ratingValue)}\r\n              onMouseLeave={() => setHover(null)}\r\n            />\r\n          </label>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n",["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":40,"column":11,"nodeType":"80","messageId":"81","endLine":40,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"83","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":15},{"ruleId":"78","severity":1,"message":"84","line":2,"column":17,"nodeType":"80","messageId":"81","endLine":2,"endColumn":23},{"ruleId":"78","severity":1,"message":"85","line":2,"column":25,"nodeType":"80","messageId":"81","endLine":2,"endColumn":34},{"ruleId":"78","severity":1,"message":"86","line":2,"column":36,"nodeType":"80","messageId":"81","endLine":2,"endColumn":40},{"ruleId":"78","severity":1,"message":"87","line":61,"column":9,"nodeType":"80","messageId":"81","endLine":61,"endColumn":21},{"ruleId":"78","severity":1,"message":"88","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":96,"column":17,"nodeType":"91","endLine":96,"endColumn":65},{"ruleId":"89","severity":1,"message":"90","line":97,"column":17,"nodeType":"91","endLine":97,"endColumn":33},{"ruleId":"89","severity":1,"message":"90","line":72,"column":13,"nodeType":"91","endLine":72,"endColumn":29},{"ruleId":"78","severity":1,"message":"92","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"78","severity":1,"message":"93","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":12,"column":6,"nodeType":"96","endLine":12,"endColumn":14,"suggestions":"97"},{"ruleId":"74","replacedBy":"98"},{"ruleId":"76","replacedBy":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'handleChange' is assigned a value but never used.","'fade' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'forwardRef' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.movie.id'. Either include it or remove the dependency array.","ArrayExpression",["102"],["100"],["101"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [props.movie.id, rating]",{"range":"105","text":"106"},[339,347],"[props.movie.id, rating]"]